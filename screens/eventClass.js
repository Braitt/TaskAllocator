import MockDB from './mockDB.js';
export default class EventClass {
    constructor(event) {
        //ID autogenerated by db
        //this.id

        //custom_id    for events that repeat... format id + i
        //like delete all with custom_id starting with id...
        //this.custom_id

        //Time related properties
        this.year = event.year;
        this.month = event.month;
        this.day = event.day;
        this.hour = event.hour;
        this.minute = event.minute;
        this.duration = event.duration;

        //this.repeatInXDays = event.repeatInXDays;
        //this.repeatAtFrecuency = "";
        //this.alertBeforeXMinutes = event.alertBeforeXMinutes;


        this.title = event.title;
        //this.description = event.description;
        this.category = event.category;
        this.tags = event.tags;


        this.amount = event.amount;
        this.type = event.type;
        this.account = event.account;
    }

    getDayOfWeek() {
        const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
        const dayOfWeek = new Date(`${this.year}-${this.month}-${this.day}`).getDay();
        return isNaN(dayOfWeek) ? null : days[dayOfWeek];
    }

    getYearMonthDay() {
        return `${this.year}-${this.month < 10 ? '0' + this.month : this.month}-${this.day < 10 ? '0' + this.day : this.day}`
    }
    getYesterday() {
        return `${this.year}-${this.month < 10 ? '0' + this.month : this.month}-${this.day <= 10 ? '0' + this.day - 1 : this.day - 1}`
    }
    getDay() {
        return this.day;
    }

    getEvent() {
        let ev = {
            "duration": this.duration, "title": this.title, "type": this.type,
            "hour": this.hour, "minute": this.minute, "category": this.category
        };
        return ev
    }
}